# Generated by Django 5.1.7 on 2025-05-12 19:31

from django.db import migrations
import random

def assign_premium_levels(apps, schema_editor):
    """
    Assign premium levels to existing jobs
    - 10% of jobs as Premium+
    - 30% of jobs as Premium
    - 60% of jobs as Standard
    """
    JobListing = apps.get_model('core', 'JobListing')
    jobs = JobListing.objects.all()
    
    for job in jobs:
        # Use random to distribute premium levels
        rand_num = random.random()
        if rand_num < 0.1:  # 10% Premium+
            job.premium_level = 'premium_plus'
        elif rand_num < 0.4:  # 30% Premium
            job.premium_level = 'premium'
        else:  # 60% Standard
            job.premium_level = 'standard'
        job.save()

def reverse_premium_levels(apps, schema_editor):
    """
    Reverse the premium level assignment (set all to standard)
    """
    JobListing = apps.get_model('core', 'JobListing')
    JobListing.objects.all().update(premium_level='standard')


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_joblisting_premium_level'),
    ]

    operations = [
        migrations.RunPython(assign_premium_levels, reverse_premium_levels),
    ]
