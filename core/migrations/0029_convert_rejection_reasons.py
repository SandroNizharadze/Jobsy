# Generated by Django 5.1.7 on 2025-05-20 20:21

from django.db import migrations


def convert_rejection_reasons(apps, schema_editor):
    """
    Convert existing rejection reasons to use the new choices format.
    Map the old text values to the new choice keys.
    """
    RejectionReason = apps.get_model('core', 'RejectionReason')
    
    # Map full text reasons to their slug versions
    reason_mapping = {
        "არასაკმარისი გამოცდილება": "არასაკმარისი_გამოცდილება",
        "უნარების ნაკლებობა": "უნარების_ნაკლებობა",
        "განათლების შეუსაბამობა": "განათლების_შეუსაბამობა",
        "არარელევანტური სამუშაო ისტორია": "არარელევანტური_სამუშაო_ისტორია",
        "ლოკაცია": "ლოკაცია",
        "სერთიფიკატების/ლიცენზიების ნაკლებობა": "სერთიფიკატების_ლიცენზიების_ნაკლებობა",
        "მოთხოვნებთან შეუსაბამო მიღწევები": "მოთხოვნებთან_შეუსაბამო_მიღწევები",
        "სივის ფორმატის/სტრუქტურის ხარვეზები": "სივის_ფორმატის_სტრუქტურის_ხარვეზები",
        "არასაკმარისი ინფორმაცია": "არასაკმარისი_ინფორმაცია",
        "გადაჭარბებული ინფორმაცია": "გადაჭარბებული_ინფორმაცია",
        "კარიერული მიზნების შეუსაბამობა": "კარიერული_მიზნების_შეუსაბამობა",
        "ენის ცოდნის ნაკლებობა": "ენის_ცოდნის_ნაკლებობა",
        "არარეალისტური ხელფასის მოლოდინი": "არარეალისტური_ხელფასის_მოლოდინი",
    }
    
    # Update each existing reason to use the new choice key
    for reason in RejectionReason.objects.all():
        old_name = reason.name
        if old_name in reason_mapping:
            reason.name = reason_mapping[old_name]
            reason.save()


def revert_rejection_reasons(apps, schema_editor):
    """
    Revert back to the original text values.
    """
    RejectionReason = apps.get_model('core', 'RejectionReason')
    
    # Map slug versions back to full text
    reverse_mapping = {
        "არასაკმარისი_გამოცდილება": "არასაკმარისი გამოცდილება",
        "უნარების_ნაკლებობა": "უნარების ნაკლებობა",
        "განათლების_შეუსაბამობა": "განათლების შეუსაბამობა",
        "არარელევანტური_სამუშაო_ისტორია": "არარელევანტური სამუშაო ისტორია",
        "ლოკაცია": "ლოკაცია",
        "სერთიფიკატების_ლიცენზიების_ნაკლებობა": "სერთიფიკატების/ლიცენზიების ნაკლებობა",
        "მოთხოვნებთან_შეუსაბამო_მიღწევები": "მოთხოვნებთან შეუსაბამო მიღწევები",
        "სივის_ფორმატის_სტრუქტურის_ხარვეზები": "სივის ფორმატის/სტრუქტურის ხარვეზები",
        "არასაკმარისი_ინფორმაცია": "არასაკმარისი ინფორმაცია",
        "გადაჭარბებული_ინფორმაცია": "გადაჭარბებული ინფორმაცია",
        "კარიერული_მიზნების_შეუსაბამობა": "კარიერული მიზნების შეუსაბამობა",
        "ენის_ცოდნის_ნაკლებობა": "ენის ცოდნის ნაკლებობა",
        "არარეალისტური_ხელფასის_მოლოდინი": "არარეალისტური ხელფასის მოლოდინი",
    }
    
    # Update each reason to use the original text
    for reason in RejectionReason.objects.all():
        new_name = reason.name
        if new_name in reverse_mapping:
            reason.name = reverse_mapping[new_name]
            reason.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0028_update_rejection_reason_model'),
    ]

    operations = [
        migrations.RunPython(convert_rejection_reasons, revert_rejection_reasons),
    ]
